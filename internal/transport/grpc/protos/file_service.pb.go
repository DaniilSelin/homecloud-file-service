// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: file_service.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на создание директории пользователя
type CreateUserDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // UUID пользователя
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`           // Имя пользователя (опционально)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserDirectoryRequest) Reset() {
	*x = CreateUserDirectoryRequest{}
	mi := &file_file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDirectoryRequest) ProtoMessage() {}

func (x *CreateUserDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateUserDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserDirectoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserDirectoryRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Ответ на создание директории пользователя
type CreateUserDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                 // Успешность операции
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                  // Сообщение о результате
	DirectoryPath string                 `protobuf:"bytes,3,opt,name=directory_path,json=directoryPath,proto3" json:"directory_path,omitempty"` // Путь к созданной директории
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserDirectoryResponse) Reset() {
	*x = CreateUserDirectoryResponse{}
	mi := &file_file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserDirectoryResponse) ProtoMessage() {}

func (x *CreateUserDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateUserDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_file_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateUserDirectoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateUserDirectoryResponse) GetDirectoryPath() string {
	if x != nil {
		return x.DirectoryPath
	}
	return ""
}

var File_file_service_proto protoreflect.FileDescriptor

const file_file_service_proto_rawDesc = "" +
	"\n" +
	"\x12file_service.proto\x12\vfileservice\"Q\n" +
	"\x1aCreateUserDirectoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"x\n" +
	"\x1bCreateUserDirectoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0edirectory_path\x18\x03 \x01(\tR\rdirectoryPath2w\n" +
	"\vFileService\x12h\n" +
	"\x13CreateUserDirectory\x12'.fileservice.CreateUserDirectoryRequest\x1a(.fileservice.CreateUserDirectoryResponseB\n" +
	"Z\b./protosb\x06proto3"

var (
	file_file_service_proto_rawDescOnce sync.Once
	file_file_service_proto_rawDescData []byte
)

func file_file_service_proto_rawDescGZIP() []byte {
	file_file_service_proto_rawDescOnce.Do(func() {
		file_file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_service_proto_rawDesc), len(file_file_service_proto_rawDesc)))
	})
	return file_file_service_proto_rawDescData
}

var file_file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_file_service_proto_goTypes = []any{
	(*CreateUserDirectoryRequest)(nil),  // 0: fileservice.CreateUserDirectoryRequest
	(*CreateUserDirectoryResponse)(nil), // 1: fileservice.CreateUserDirectoryResponse
}
var file_file_service_proto_depIdxs = []int32{
	0, // 0: fileservice.FileService.CreateUserDirectory:input_type -> fileservice.CreateUserDirectoryRequest
	1, // 1: fileservice.FileService.CreateUserDirectory:output_type -> fileservice.CreateUserDirectoryResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_file_service_proto_init() }
func file_file_service_proto_init() {
	if File_file_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_service_proto_rawDesc), len(file_file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_service_proto_goTypes,
		DependencyIndexes: file_file_service_proto_depIdxs,
		MessageInfos:      file_file_service_proto_msgTypes,
	}.Build()
	File_file_service_proto = out.File
	file_file_service_proto_goTypes = nil
	file_file_service_proto_depIdxs = nil
}
